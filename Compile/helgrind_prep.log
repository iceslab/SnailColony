==10447== Helgrind, a thread error detector
==10447== Copyright (C) 2007-2015, and GNU GPL'd, by OpenWorks LLP et al.
==10447== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==10447== Command: ./SnailColony
==10447== 
==10447== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-10447-by-user-on-???
==10447== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-10447-by-user-on-???
==10447== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-10447-by-user-on-???
==10447== 
==10447== TO CONTROL THIS PROCESS USING vgdb (which you probably
==10447== don't want to do, unless you know exactly what you're doing,
==10447== or are doing some strange experiment):
==10447==   /usr/lib/valgrind/../../bin/vgdb --pid=10447 ...command...
==10447== 
==10447== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==10447==   /path/to/gdb ./SnailColony
==10447== and then give GDB the following command
==10447==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=10447
==10447== --pid is optional if only one valgrind process is running
==10447== 
==10447== WARNING: new redirection conflicts with existing -- ignoring it
==10447== WARNING: new redirection conflicts with existing -- ignoring it
==10447== WARNING: new redirection conflicts with existing -- ignoring it
==10447== ---Thread-Announcement------------------------------------------
==10447== 
==10447== Thread #1 is the program's root thread
==10447== 
==10447== ---Thread-Announcement------------------------------------------
==10447== 
==10447== Thread #2 was created
==10447==    at 0x5E4FB1E: clone (clone.S:74)
==10447==    by 0x5291189: create_thread (createthread.c:102)
==10447==    by 0x5292EC3: pthread_create@@GLIBC_2.2.5 (pthread_create.c:679)
==10447==    by 0x4C34BB7: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x40994B: Snail::Snail(ColorPair, Grass*, int, int) (Snail.cpp:16)
==10447==    by 0x40ADDE: _ZN9__gnu_cxx13new_allocatorI5SnailE9constructIS1_I9ColorPairRP5GrassiiEEEvPT_DpOT0_ (in /home/user/workspace/SnailColony/Compile/SnailColony)
==10447==    by 0x40A96D: _ZNSt16allocator_traitsISaI5SnailEE9constructIS0_I9ColorPairRP5GrassiiEEEvRS1_PT_DpOT0_ (alloc_traits.h:530)
==10447==    by 0x40AA50: void std::vector<Snail, std::allocator<Snail> >::_M_emplace_back_aux<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:416)
==10447==    by 0x40A7A1: void std::vector<Snail, std::allocator<Snail> >::emplace_back<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:101)
==10447==    by 0x40A48B: SnailColony::add() (SnailColony.cpp:43)
==10447==    by 0x4088D5: main (main.cpp:21)
==10447== 
==10447== ----------------------------------------------------------------
==10447== 
==10447== Possible data race during read of size 4 at 0x6329168 by thread #1
==10447== Locks held: none
==10447==    at 0x40B418: Snail::Snail(Snail const&) (Snail.h:14)
==10447==    by 0x40B4BD: _ZSt10_ConstructI5SnailIS0_EEvPT_DpOT0_ (in /home/user/workspace/SnailColony/Compile/SnailColony)
==10447==    by 0x40B33F: Snail* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Snail*>, Snail*>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*) (stl_uninitialized.h:75)
==10447==    by 0x40B2CE: Snail* std::uninitialized_copy<std::move_iterator<Snail*>, Snail*>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*) (stl_uninitialized.h:126)
==10447==    by 0x40B1B7: Snail* std::__uninitialized_copy_a<std::move_iterator<Snail*>, Snail*, Snail>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*, std::allocator<Snail>&) (stl_uninitialized.h:281)
==10447==    by 0x40AF75: Snail* std::__uninitialized_move_if_noexcept_a<Snail*, Snail*, std::allocator<Snail> >(Snail*, Snail*, Snail*, std::allocator<Snail>&) (stl_uninitialized.h:304)
==10447==    by 0x40AA82: void std::vector<Snail, std::allocator<Snail> >::_M_emplace_back_aux<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:420)
==10447==    by 0x40A7A1: void std::vector<Snail, std::allocator<Snail> >::emplace_back<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:101)
==10447==    by 0x40A48B: SnailColony::add() (SnailColony.cpp:43)
==10447==    by 0x4088E9: main (main.cpp:22)
==10447== 
==10447== This conflicts with a previous write of size 4 by thread #2
==10447== Locks held: none
==10447==    at 0x409B1A: Snail::makeRandomMove() (Snail.cpp:76)
==10447==    by 0x409E19: Snail::snailThreadFn(void*) (Snail.cpp:160)
==10447==    by 0x4C34DB6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x52926F9: start_thread (pthread_create.c:333)
==10447==    by 0x5E4FB5C: clone (clone.S:109)
==10447==  Address 0x6329168 is 8 bytes inside a block of size 48 alloc'd
==10447==    at 0x4C2F50F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x40B282: __gnu_cxx::new_allocator<Snail>::allocate(unsigned long, void const*) (new_allocator.h:104)
==10447==    by 0x40B13E: std::allocator_traits<std::allocator<Snail> >::allocate(std::allocator<Snail>&, unsigned long) (alloc_traits.h:491)
==10447==    by 0x40AF1F: std::_Vector_base<Snail, std::allocator<Snail> >::_M_allocate(unsigned long) (stl_vector.h:170)
==10447==    by 0x40A9C9: void std::vector<Snail, std::allocator<Snail> >::_M_emplace_back_aux<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:412)
==10447==    by 0x40A7A1: void std::vector<Snail, std::allocator<Snail> >::emplace_back<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:101)
==10447==    by 0x40A48B: SnailColony::add() (SnailColony.cpp:43)
==10447==    by 0x4088D5: main (main.cpp:21)
==10447==  Block was alloc'd by thread #1
==10447== 
==10447== ----------------------------------------------------------------
==10447== 
==10447== Possible data race during read of size 4 at 0x632916C by thread #1
==10447== Locks held: none
==10447==    at 0x40B426: Snail::Snail(Snail const&) (Snail.h:14)
==10447==    by 0x40B4BD: _ZSt10_ConstructI5SnailIS0_EEvPT_DpOT0_ (in /home/user/workspace/SnailColony/Compile/SnailColony)
==10447==    by 0x40B33F: Snail* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Snail*>, Snail*>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*) (stl_uninitialized.h:75)
==10447==    by 0x40B2CE: Snail* std::uninitialized_copy<std::move_iterator<Snail*>, Snail*>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*) (stl_uninitialized.h:126)
==10447==    by 0x40B1B7: Snail* std::__uninitialized_copy_a<std::move_iterator<Snail*>, Snail*, Snail>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*, std::allocator<Snail>&) (stl_uninitialized.h:281)
==10447==    by 0x40AF75: Snail* std::__uninitialized_move_if_noexcept_a<Snail*, Snail*, std::allocator<Snail> >(Snail*, Snail*, Snail*, std::allocator<Snail>&) (stl_uninitialized.h:304)
==10447==    by 0x40AA82: void std::vector<Snail, std::allocator<Snail> >::_M_emplace_back_aux<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:420)
==10447==    by 0x40A7A1: void std::vector<Snail, std::allocator<Snail> >::emplace_back<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:101)
==10447==    by 0x40A48B: SnailColony::add() (SnailColony.cpp:43)
==10447==    by 0x4088E9: main (main.cpp:22)
==10447== 
==10447== This conflicts with a previous write of size 4 by thread #2
==10447== Locks held: none
==10447==    at 0x409B2D: Snail::makeRandomMove() (Snail.cpp:77)
==10447==    by 0x409E19: Snail::snailThreadFn(void*) (Snail.cpp:160)
==10447==    by 0x4C34DB6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x52926F9: start_thread (pthread_create.c:333)
==10447==    by 0x5E4FB5C: clone (clone.S:109)
==10447==  Address 0x632916c is 12 bytes inside a block of size 48 alloc'd
==10447==    at 0x4C2F50F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x40B282: __gnu_cxx::new_allocator<Snail>::allocate(unsigned long, void const*) (new_allocator.h:104)
==10447==    by 0x40B13E: std::allocator_traits<std::allocator<Snail> >::allocate(std::allocator<Snail>&, unsigned long) (alloc_traits.h:491)
==10447==    by 0x40AF1F: std::_Vector_base<Snail, std::allocator<Snail> >::_M_allocate(unsigned long) (stl_vector.h:170)
==10447==    by 0x40A9C9: void std::vector<Snail, std::allocator<Snail> >::_M_emplace_back_aux<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:412)
==10447==    by 0x40A7A1: void std::vector<Snail, std::allocator<Snail> >::emplace_back<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:101)
==10447==    by 0x40A48B: SnailColony::add() (SnailColony.cpp:43)
==10447==    by 0x4088D5: main (main.cpp:21)
==10447==  Block was alloc'd by thread #1
==10447== 
==10447== ----------------------------------------------------------------
==10447== 
==10447== Possible data race during read of size 4 at 0x6329180 by thread #1
==10447== Locks held: none
==10447==    at 0x40B460: Snail::Snail(Snail const&) (Snail.h:14)
==10447==    by 0x40B4BD: _ZSt10_ConstructI5SnailIS0_EEvPT_DpOT0_ (in /home/user/workspace/SnailColony/Compile/SnailColony)
==10447==    by 0x40B33F: Snail* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Snail*>, Snail*>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*) (stl_uninitialized.h:75)
==10447==    by 0x40B2CE: Snail* std::uninitialized_copy<std::move_iterator<Snail*>, Snail*>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*) (stl_uninitialized.h:126)
==10447==    by 0x40B1B7: Snail* std::__uninitialized_copy_a<std::move_iterator<Snail*>, Snail*, Snail>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*, std::allocator<Snail>&) (stl_uninitialized.h:281)
==10447==    by 0x40AF75: Snail* std::__uninitialized_move_if_noexcept_a<Snail*, Snail*, std::allocator<Snail> >(Snail*, Snail*, Snail*, std::allocator<Snail>&) (stl_uninitialized.h:304)
==10447==    by 0x40AA82: void std::vector<Snail, std::allocator<Snail> >::_M_emplace_back_aux<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:420)
==10447==    by 0x40A7A1: void std::vector<Snail, std::allocator<Snail> >::emplace_back<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:101)
==10447==    by 0x40A48B: SnailColony::add() (SnailColony.cpp:43)
==10447==    by 0x4088E9: main (main.cpp:22)
==10447== 
==10447== This conflicts with a previous write of size 4 by thread #2
==10447== Locks held: none
==10447==    at 0x409BDC: Snail::increaseHunger(unsigned int) (Snail.cpp:102)
==10447==    by 0x409ADB: Snail::makeRandomMove() (Snail.cpp:71)
==10447==    by 0x409E19: Snail::snailThreadFn(void*) (Snail.cpp:160)
==10447==    by 0x4C34DB6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x52926F9: start_thread (pthread_create.c:333)
==10447==    by 0x5E4FB5C: clone (clone.S:109)
==10447==  Address 0x6329180 is 32 bytes inside a block of size 48 alloc'd
==10447==    at 0x4C2F50F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x40B282: __gnu_cxx::new_allocator<Snail>::allocate(unsigned long, void const*) (new_allocator.h:104)
==10447==    by 0x40B13E: std::allocator_traits<std::allocator<Snail> >::allocate(std::allocator<Snail>&, unsigned long) (alloc_traits.h:491)
==10447==    by 0x40AF1F: std::_Vector_base<Snail, std::allocator<Snail> >::_M_allocate(unsigned long) (stl_vector.h:170)
==10447==    by 0x40A9C9: void std::vector<Snail, std::allocator<Snail> >::_M_emplace_back_aux<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:412)
==10447==    by 0x40A7A1: void std::vector<Snail, std::allocator<Snail> >::emplace_back<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:101)
==10447==    by 0x40A48B: SnailColony::add() (SnailColony.cpp:43)
==10447==    by 0x4088D5: main (main.cpp:21)
==10447==  Block was alloc'd by thread #1
==10447== 
==10447== 
==10447== Process terminating with default action of signal 11 (SIGSEGV)
==10447==  Access not within mapped region at address 0x7E
==10447==    at 0x40A199: Tile::shrink(unsigned int) (Tile.cpp:50)
==10447==    by 0x409A7F: Snail::eat() (Snail.cpp:63)
==10447==    by 0x409B4F: Snail::makeRandomMove() (Snail.cpp:80)
==10447==    by 0x409E19: Snail::snailThreadFn(void*) (Snail.cpp:160)
==10447==    by 0x4C34DB6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x52926F9: start_thread (pthread_create.c:333)
==10447==    by 0x5E4FB5C: clone (clone.S:109)
==10447==  If you believe this happened as a result of a stack
==10447==  overflow in your program's main thread (unlikely but
==10447==  possible), you can try to increase the size of the
==10447==  main thread stack using the --main-stacksize= flag.
==10447==  The main thread stack size used in this run was 8388608.
==10447== 
==10447== ERROR SUMMARY: 6 errors from 3 contexts (suppressed: 34 from 14)
==10447== 
==10447== 2 errors in context 1 of 3:
==10447== ----------------------------------------------------------------
==10447== 
==10447== Possible data race during read of size 4 at 0x6329180 by thread #1
==10447== Locks held: none
==10447==    at 0x40B460: Snail::Snail(Snail const&) (Snail.h:14)
==10447==    by 0x40B4BD: _ZSt10_ConstructI5SnailIS0_EEvPT_DpOT0_ (in /home/user/workspace/SnailColony/Compile/SnailColony)
==10447==    by 0x40B33F: Snail* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Snail*>, Snail*>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*) (stl_uninitialized.h:75)
==10447==    by 0x40B2CE: Snail* std::uninitialized_copy<std::move_iterator<Snail*>, Snail*>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*) (stl_uninitialized.h:126)
==10447==    by 0x40B1B7: Snail* std::__uninitialized_copy_a<std::move_iterator<Snail*>, Snail*, Snail>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*, std::allocator<Snail>&) (stl_uninitialized.h:281)
==10447==    by 0x40AF75: Snail* std::__uninitialized_move_if_noexcept_a<Snail*, Snail*, std::allocator<Snail> >(Snail*, Snail*, Snail*, std::allocator<Snail>&) (stl_uninitialized.h:304)
==10447==    by 0x40AA82: void std::vector<Snail, std::allocator<Snail> >::_M_emplace_back_aux<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:420)
==10447==    by 0x40A7A1: void std::vector<Snail, std::allocator<Snail> >::emplace_back<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:101)
==10447==    by 0x40A48B: SnailColony::add() (SnailColony.cpp:43)
==10447==    by 0x4088E9: main (main.cpp:22)
==10447== 
==10447== This conflicts with a previous write of size 4 by thread #2
==10447== Locks held: none
==10447==    at 0x409BDC: Snail::increaseHunger(unsigned int) (Snail.cpp:102)
==10447==    by 0x409ADB: Snail::makeRandomMove() (Snail.cpp:71)
==10447==    by 0x409E19: Snail::snailThreadFn(void*) (Snail.cpp:160)
==10447==    by 0x4C34DB6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x52926F9: start_thread (pthread_create.c:333)
==10447==    by 0x5E4FB5C: clone (clone.S:109)
==10447==  Address 0x6329180 is 32 bytes inside a block of size 48 alloc'd
==10447==    at 0x4C2F50F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x40B282: __gnu_cxx::new_allocator<Snail>::allocate(unsigned long, void const*) (new_allocator.h:104)
==10447==    by 0x40B13E: std::allocator_traits<std::allocator<Snail> >::allocate(std::allocator<Snail>&, unsigned long) (alloc_traits.h:491)
==10447==    by 0x40AF1F: std::_Vector_base<Snail, std::allocator<Snail> >::_M_allocate(unsigned long) (stl_vector.h:170)
==10447==    by 0x40A9C9: void std::vector<Snail, std::allocator<Snail> >::_M_emplace_back_aux<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:412)
==10447==    by 0x40A7A1: void std::vector<Snail, std::allocator<Snail> >::emplace_back<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:101)
==10447==    by 0x40A48B: SnailColony::add() (SnailColony.cpp:43)
==10447==    by 0x4088D5: main (main.cpp:21)
==10447==  Block was alloc'd by thread #1
==10447== 
==10447== 
==10447== 2 errors in context 2 of 3:
==10447== ----------------------------------------------------------------
==10447== 
==10447== Possible data race during read of size 4 at 0x632916C by thread #1
==10447== Locks held: none
==10447==    at 0x40B426: Snail::Snail(Snail const&) (Snail.h:14)
==10447==    by 0x40B4BD: _ZSt10_ConstructI5SnailIS0_EEvPT_DpOT0_ (in /home/user/workspace/SnailColony/Compile/SnailColony)
==10447==    by 0x40B33F: Snail* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Snail*>, Snail*>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*) (stl_uninitialized.h:75)
==10447==    by 0x40B2CE: Snail* std::uninitialized_copy<std::move_iterator<Snail*>, Snail*>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*) (stl_uninitialized.h:126)
==10447==    by 0x40B1B7: Snail* std::__uninitialized_copy_a<std::move_iterator<Snail*>, Snail*, Snail>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*, std::allocator<Snail>&) (stl_uninitialized.h:281)
==10447==    by 0x40AF75: Snail* std::__uninitialized_move_if_noexcept_a<Snail*, Snail*, std::allocator<Snail> >(Snail*, Snail*, Snail*, std::allocator<Snail>&) (stl_uninitialized.h:304)
==10447==    by 0x40AA82: void std::vector<Snail, std::allocator<Snail> >::_M_emplace_back_aux<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:420)
==10447==    by 0x40A7A1: void std::vector<Snail, std::allocator<Snail> >::emplace_back<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:101)
==10447==    by 0x40A48B: SnailColony::add() (SnailColony.cpp:43)
==10447==    by 0x4088E9: main (main.cpp:22)
==10447== 
==10447== This conflicts with a previous write of size 4 by thread #2
==10447== Locks held: none
==10447==    at 0x409B2D: Snail::makeRandomMove() (Snail.cpp:77)
==10447==    by 0x409E19: Snail::snailThreadFn(void*) (Snail.cpp:160)
==10447==    by 0x4C34DB6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x52926F9: start_thread (pthread_create.c:333)
==10447==    by 0x5E4FB5C: clone (clone.S:109)
==10447==  Address 0x632916c is 12 bytes inside a block of size 48 alloc'd
==10447==    at 0x4C2F50F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x40B282: __gnu_cxx::new_allocator<Snail>::allocate(unsigned long, void const*) (new_allocator.h:104)
==10447==    by 0x40B13E: std::allocator_traits<std::allocator<Snail> >::allocate(std::allocator<Snail>&, unsigned long) (alloc_traits.h:491)
==10447==    by 0x40AF1F: std::_Vector_base<Snail, std::allocator<Snail> >::_M_allocate(unsigned long) (stl_vector.h:170)
==10447==    by 0x40A9C9: void std::vector<Snail, std::allocator<Snail> >::_M_emplace_back_aux<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:412)
==10447==    by 0x40A7A1: void std::vector<Snail, std::allocator<Snail> >::emplace_back<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:101)
==10447==    by 0x40A48B: SnailColony::add() (SnailColony.cpp:43)
==10447==    by 0x4088D5: main (main.cpp:21)
==10447==  Block was alloc'd by thread #1
==10447== 
==10447== 
==10447== 2 errors in context 3 of 3:
==10447== ----------------------------------------------------------------
==10447== 
==10447== Possible data race during read of size 4 at 0x6329168 by thread #1
==10447== Locks held: none
==10447==    at 0x40B418: Snail::Snail(Snail const&) (Snail.h:14)
==10447==    by 0x40B4BD: _ZSt10_ConstructI5SnailIS0_EEvPT_DpOT0_ (in /home/user/workspace/SnailColony/Compile/SnailColony)
==10447==    by 0x40B33F: Snail* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<Snail*>, Snail*>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*) (stl_uninitialized.h:75)
==10447==    by 0x40B2CE: Snail* std::uninitialized_copy<std::move_iterator<Snail*>, Snail*>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*) (stl_uninitialized.h:126)
==10447==    by 0x40B1B7: Snail* std::__uninitialized_copy_a<std::move_iterator<Snail*>, Snail*, Snail>(std::move_iterator<Snail*>, std::move_iterator<Snail*>, Snail*, std::allocator<Snail>&) (stl_uninitialized.h:281)
==10447==    by 0x40AF75: Snail* std::__uninitialized_move_if_noexcept_a<Snail*, Snail*, std::allocator<Snail> >(Snail*, Snail*, Snail*, std::allocator<Snail>&) (stl_uninitialized.h:304)
==10447==    by 0x40AA82: void std::vector<Snail, std::allocator<Snail> >::_M_emplace_back_aux<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:420)
==10447==    by 0x40A7A1: void std::vector<Snail, std::allocator<Snail> >::emplace_back<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:101)
==10447==    by 0x40A48B: SnailColony::add() (SnailColony.cpp:43)
==10447==    by 0x4088E9: main (main.cpp:22)
==10447== 
==10447== This conflicts with a previous write of size 4 by thread #2
==10447== Locks held: none
==10447==    at 0x409B1A: Snail::makeRandomMove() (Snail.cpp:76)
==10447==    by 0x409E19: Snail::snailThreadFn(void*) (Snail.cpp:160)
==10447==    by 0x4C34DB6: ??? (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x52926F9: start_thread (pthread_create.c:333)
==10447==    by 0x5E4FB5C: clone (clone.S:109)
==10447==  Address 0x6329168 is 8 bytes inside a block of size 48 alloc'd
==10447==    at 0x4C2F50F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_helgrind-amd64-linux.so)
==10447==    by 0x40B282: __gnu_cxx::new_allocator<Snail>::allocate(unsigned long, void const*) (new_allocator.h:104)
==10447==    by 0x40B13E: std::allocator_traits<std::allocator<Snail> >::allocate(std::allocator<Snail>&, unsigned long) (alloc_traits.h:491)
==10447==    by 0x40AF1F: std::_Vector_base<Snail, std::allocator<Snail> >::_M_allocate(unsigned long) (stl_vector.h:170)
==10447==    by 0x40A9C9: void std::vector<Snail, std::allocator<Snail> >::_M_emplace_back_aux<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:412)
==10447==    by 0x40A7A1: void std::vector<Snail, std::allocator<Snail> >::emplace_back<ColorPair, Grass*&, int, int>(ColorPair&&, Grass*&, int&&, int&&) (vector.tcc:101)
==10447==    by 0x40A48B: SnailColony::add() (SnailColony.cpp:43)
==10447==    by 0x4088D5: main (main.cpp:21)
==10447==  Block was alloc'd by thread #1
==10447== 
==10447== 
==10447== ERROR SUMMARY: 6 errors from 3 contexts (suppressed: 34 from 14)
